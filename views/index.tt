<form style="margin:0; padding:0; text-align: center" method="post" action="/">
[% IF prevbook > 0 && prevbook < 66 %]
    <a href="/?book=[% prevbook %]&chunk=[% chunk %]&term=[% term %]">&laquo;</a>
    &nbsp;
[% END %]
    <label for="book">Book: </label><select name="book">
[% FOREACH i in books.nsort %]
        <option value="[% books.$i %]" [% books.$i == book ? 'selected' : '' %]>[% i %]</option>
[% END %]
    </select>
    <label for="chunk">Scale: </label><input type="text" name="chunk" size="3" maxlength="3" value="[% chunk %]"/>
    <label for="term">Term: </label><input type="text" name="term" size="10" maxlength="20" value="[% term %]"/>
[% IF nextbook <= 66 %]
    &nbsp;
    <a href="/?book=[% nextbook %]&chunk=[% chunk %]&term=[% term %]">&raquo;</a>
[% END %]
    <br>
    <input type="submit" />
</form>

<canvas id="line-chart" width="800" height="400"></canvas>

<script>
    const verticalLinePlugin = {
        getLinePosition: function (chart, pointIndex) {
            const meta = chart.getDatasetMeta(0); // first dataset is used to discover X coordinate of a point
            const data = meta.data;
            return data[pointIndex]._model.x;
        },
        renderVerticalLine: function (chartInstance, pointIndex) {
            const lineLeftOffset = this.getLinePosition(chartInstance, pointIndex);
            const scale = chartInstance.scales['y-axis-0'];
            const context = chartInstance.chart.ctx;

            // render vertical line
            context.beginPath();
            context.strokeStyle = '#ff0000';
            context.moveTo(lineLeftOffset, scale.top);
            context.lineTo(lineLeftOffset, scale.bottom);
            context.stroke();
        },

        afterDatasetsDraw: function (chart, easing) {
            if (chart.config.lineAtIndex) {
                chart.config.lineAtIndex.forEach(pointIndex => this.renderVerticalLine(chart, pointIndex));
            }
        }
    };
    Chart.plugins.register(verticalLinePlugin);

new Chart(document.getElementById("line-chart"), {
    type: 'line',
    lineAtIndex: [[% locations.join(',') %]],
    data: {
        labels: [[% labels.join(',') %]],
        datasets: [
            { 
                data: [[% data.join(',') %]],
                label: "[% label %]",
                borderColor: "#3e95cd",
                pointRadius: 2,
                fill: true
            }
        ]
    },
    options: {
        title: {
            display: true,
            text: 'Sentiment Across Narrative Time'
        },
        animation: {
            duration: 0 // general animation time
        },
        responsiveAnimationDuration: 0 // animation duration after a resize
    }
});
</script>

<pre>[% text %]</pre>
